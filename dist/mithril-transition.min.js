(function(b){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=b();else if("function"==typeof define&&define.amd)define([],b);else{var c;c="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,c.mithrilTransition=b()}})(function(){return function h(j,k,m){function p(w,x){if(!k[w]){if(!j[w]){var y="function"==typeof require&&require;if(!x&&y)return y(w,!0);if(q)return q(w,!0);var z=new Error("Cannot find module '"+w+"'");throw z.code="MODULE_NOT_FOUND",z}var A=k[w]={exports:{}};j[w][0].call(A.exports,function(B){var C=j[w][1][B];return p(C?C:B)},A,A.exports,h,j,k,m)}return k[w].exports}for(var q="function"==typeof require&&require,v=0;v<m.length;v++)p(m[v]);return p}({1:[function(h,j){const m=h("./lib/history"),{oncreate:p,onremove:q}=h("./lib/hooks"),v=Symbol("enabled");j.exports=function({animation:x,useHistory:y=!0,persistHistoryAs:z=null,classList:A={parent:"m-transition-parent",lastElm:"m-transition-last-element",nextElm:"m-transition-new-element",direction:"m-transition-<direction>"},disable:B=function(){}}={}){if(!x)throw new Error("Error in mithril-transition: option [animation] is required.");const C={useHistory:y,animation:x,classList:A,[v]:!0,isEnabled(){return C[v]},enable(){C[v]=!0},disable(){B(),C[v]=!1},oncreate(...D){return p.call(C,...D)},onremove(...D){return q.call(C,...D)}};return C.useHistory&&(C.history=m(z)),C}},{"./lib/history":3,"./lib/hooks":4}],2:[function(h,j,k){k.loadClasses=function(m,p,q,v){q.parentNode.classList.add(m.parent),p.classList.add(m.lastElm),q.classList.add(m.nextElm),q.classList.add(m.direction.replace("<direction>",v))},k.unloadClasses=function(m,p,q,v,w){const x=p-1;return 0<x?x:(v.classList.remove(m.nextElm),v.classList.remove(m.direction.replace("<direction>",w)),v.parentNode&&v.parentNode.classList.remove(m.parent),x)}},{}],3:[function(h,j){function m(q,v){q&&sessionStorage.setItem(q,JSON.stringify(v))}function p(q){q&&sessionStorage.removeItem(q)}j.exports=function(v=null){let w=[];return v&&sessionStorage.getItem(v)&&(w=JSON.parse(sessionStorage.getItem(v))),{persistHistoryAs:v,stack:w,push(x){this.stack.push(x),m(this.persistHistoryAs,this.stack)},pop(){this.stack.pop(),m(this.persistHistoryAs,this.stack)},clear(){this.stack=[],p(this.persistHistoryAs)},last(){return this.stack[this.stack.length-1]?this.stack[this.stack.length-1]:void 0},direction(x,y){return this.last()===x?(this.pop(),"prev"):(y&&this.push(y.key),"next")}}}},{}],4:[function(h,j){const{loadClasses:m,unloadClasses:p}=h("./classes");j.exports={oncreate(q){const v=q.key,w=q.dom;if(this.useHistory&&!v)throw new Error("Error in mithril-transition: is required specified a key for the vnode if you want to use the history.");if(this.isEnabled()){const x=w.parentNode;let y="next";if(this.useHistory&&(y=this.history.direction(v,this.last)),this.last){let z=this.last.dom;const A=this.classList,B="mithril-transition-"+Date.now();m(A,z,w,y),z.setAttribute("data-transition-id",B),x.insertAdjacentHTML("beforeend",z.outerHTML),z=x.querySelector("[data-transition-id="+B+"]");let C=2;this.animation({lastElm:z,nextElm:w,direction:y,cbLast(){z.parentNode.removeChild(z),C=p(A,C,x,w,y)},cbNext(){C=p(A,C,x,w,y)}})}}},onremove(q){this.isEnabled()&&(q.dom.style["pointer-events"]="none",this.last={key:q.key,dom:q.dom})}}},{"./classes":2}]},{},[1])(1)});

//# sourceMappingURL=mithril-transition.min.js.map